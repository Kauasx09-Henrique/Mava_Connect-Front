/* --- VARIÁVEIS DE TEMA CORRIGIDAS --- */
:global(body.dark-mode) {
  --bg-color: #1a1b21;      /* Cor de fundo principal da página */
  --bg-card: #24252c;       /* Cor de fundo de cards e elementos contidos */
  --text-color: #e2e2e2;
  --text-muted: #8c8c8c;
  --border-color: #3a3b45;
  --accent-color: #f97316;   /* Laranja Principal */
  --accent-hover: #ea580c;   /* Laranja mais escuro para hover */
  --shadow-color: rgba(0, 0, 0, 0.2);
}

:global(body.light-mode) {
  /* CORRIGIDO: Renomeado de --bg-page para --bg-color para consistência */
  --bg-color: #f0f2f5;      
  --bg-card: #ffffff;
  --text-color: #1e293b;
  --text-muted: #64748b;
  --border-color: #e2e8f0;
  --accent-color: #f97316;   /* Laranja Principal */
  --accent-hover: #ea580c;   /* Laranja mais escuro para hover */
  --shadow-color: rgba(149, 157, 165, 0.1);
}

/* Cores semânticas globais */
:root {
  --green: #28a745;
  --yellow: #ffc107;
  --red: #dc3545;
  --blue: #007bff;
  --purple: #6f42c1;
  --teal: #14b8a6;
}

.adminContainer {
  background-color: var(--bg-color); 
  color: var(--text-color);
  min-height: 100vh; 
  font-family: 'Inter', sans-serif;
}

.mainContent { 
  padding: 2rem; 
  max-width: 1400px; 
  margin: 0 auto; 
}

.mainHeader {
  display: flex; 
  justify-content: space-between; 
  align-items: center;
  margin-bottom: 1.5rem; 
  flex-wrap: wrap; 
  gap: 1rem;
}

.mainHeader h1 { 
  font-size: 1.8rem; 
  font-weight: 700; 
  letter-spacing: -0.5px; 
}

.searchBox {
  display: flex; 
  align-items: center; 
  /* CORRIGIDO: --card-bg para --bg-card */
  background-color: var(--bg-card);
  border: 1px solid var(--border-color); 
  border-radius: 8px;
  padding: 0.5rem 1rem; 
  width: 100%; 
  max-width: 320px;
  transition: all 0.2s;
}

.searchBox:focus-within {
  border-color: var(--accent-color);
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.25);
}

.searchBox svg { 
  color: var(--text-muted); 
}

.searchBox input {
  background: none; 
  border: none; 
  color: var(--text-color);
  font-size: 1rem; 
  margin-left: 0.5rem; 
  width: 100%;
}

.searchBox input:focus { 
  outline: none; 
}

.viewToggle {
  display: inline-flex;
  position: relative;
  /* CORRIGIDO: --card-bg para --bg-card */
  background-color: var(--bg-card);
  border-radius: 10px;
  padding: 0.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 2px 4px var(--shadow-color);
}

.viewToggle button {
  background: none; 
  border: none; 
  color: var(--text-muted);
  padding: 0.75rem 1.5rem; 
  border-radius: 8px; 
  cursor: pointer;
  font-weight: 600; 
  font-size: 1rem; 
  display: flex; 
  align-items: center; 
  gap: 0.5rem;
  transition: color 0.3s ease-in-out;
  z-index: 1;
}

.viewToggle button.active {
  color: #fff;
}

.activeIndicator {
  position: absolute;
  top: 0.5rem;
  bottom: 0.5rem;
  height: auto;
  border-radius: 8px;
  background-color: var(--accent-color);
  box-shadow: 0 4px 10px rgba(0,0,0,0.2);
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.statsGrid {
  display: grid; 
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.5rem; 
  margin-bottom: 2rem;
}

.statCard {
  /* CORRIGIDO: --card-bg para --bg-card */
  background-color: var(--bg-card); 
  border-radius: 12px;
  padding: 1.5rem; 
  display: flex; 
  align-items: center;
  gap: 1rem; 
  border-left: 5px solid;
  box-shadow: 0 4px 12px var(--shadow-color);
  transition: transform 0.2s, box-shadow 0.2s;
}

.statCard:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px var(--shadow-color);
}

.statCard.blue { border-color: var(--blue); }
.statCard.yellow { border-color: var(--yellow); }
.statCard.green { border-color: var(--green); }
.statCard.red { border-color: var(--red); }
.statCard.purple { border-color: var(--purple); }
.statCard.orange { border-color: var(--teal); }

.statIcon {
  font-size: 2rem; 
  padding: 0.75rem; 
  border-radius: 50%;
  display: flex; 
  align-items: center; 
  justify-content: center;
}

.blue .statIcon { background-color: rgba(0, 123, 255, 0.1); color: var(--blue); }
.yellow .statIcon { background-color: rgba(255, 193, 7, 0.1); color: var(--yellow); }
.green .statIcon { background-color: rgba(40, 167, 69, 0.1); color: var(--green); }
.red .statIcon { background-color: rgba(220, 53, 69, 0.1); color: var(--red); }
.purple .statIcon { background-color: rgba(111, 66, 193, 0.1); color: var(--purple); }
.orange .statIcon { background-color: rgba(20, 184, 166, 0.1); color: var(--teal); }

.statInfo { 
  display: flex; 
  flex-direction: column; 
}

.statValue { 
  font-size: 2rem; 
  font-weight: 700; 
  line-height: 1.1; 
}

.statLabel { 
  font-size: 0.9rem; 
  color: var(--text-muted); 
  white-space: nowrap; 
  overflow: hidden; 
  text-overflow: ellipsis; 
}

.tableContainer {
  /* CORRIGIDO: --card-bg para --bg-card */
  background-color: var(--bg-card); 
  border-radius: 12px;
  padding: 1.5rem; 
  box-shadow: 0 4px 12px var(--shadow-color);
}

.tableHeader {
  display: flex; 
  flex-wrap: wrap; 
  justify-content: space-between;
  align-items: center; 
  margin-bottom: 1rem; 
  gap: 1rem;
}

.tableHeader h3 { 
  font-size: 1.25rem; 
  font-weight: 600; 
}

.headerActions { 
  display: flex; 
  flex-wrap: wrap; 
  gap: 1rem; 
}

.filterButtons {
  display: flex; 
  align-items: center; 
  background-color: var(--bg-color);
  padding: 0.25rem; 
  border-radius: 8px;
}

.filterButtons button {
  background: none; 
  border: none; 
  color: var(--text-muted);
  padding: 0.5rem 1rem; 
  border-radius: 6px; 
  cursor: pointer;
  font-weight: 500; 
  display: flex; 
  align-items: center; 
  gap: 0.5rem;
  transition: all 0.2s;
}

.filterButtons button.active {
  /* FIX: Using !important to ensure these styles apply. */
  /* There might be a conflicting style elsewhere in the project overriding the background color. */
  /* This ensures the active button is always visible with the correct accent color. */
  background-color: var(--accent-color) !important;
  color: #fff !important;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.addButton {
  background-color: var(--accent-color); 
  /* CORRIGIDO: Cor do texto para branco para melhor legibilidade */
  color: #fff; 
  border: none;
  border-radius: 8px; 
  padding: 0.6rem 1.2rem; 
  font-weight: 600;
  cursor: pointer; 
  display: flex; 
  align-items: center; 
  gap: 0.5rem;
  transition: all 0.2s;
}

.addButton:hover { 
  background-color: var(--accent-hover); 
  transform: translateY(-2px); 
  box-shadow: 0 4px 8px rgba(0,0,0,0.2); 
}

.tableWrapper { 
  width: 100%; 
  overflow-x: auto; 
}

.dataTable { 
  width: 100%; 
  border-collapse: collapse; 
}

.dataTable th, .dataTable td {
  padding: 1rem; 
  text-align: left;
  border-bottom: 1px solid var(--border-color); 
  white-space: nowrap;
}

.dataTable th {
  color: var(--text-muted); 
  font-weight: 600;
  font-size: 0.85rem; 
  text-transform: uppercase;
}

.dataTable tbody tr { 
  transition: background-color 0.2s; 
}

.dataTable tbody tr:hover { 
  background-color: var(--bg-color); 
}

.noData { 
  text-align: center; 
  color: var(--text-muted); 
  padding: 3rem 1rem !important; 
}

.roleBadge {
  padding: 0.3rem 0.6rem; 
  border-radius: 15px; 
  font-weight: 500;
  font-size: 0.8rem; 
  display: inline-flex; 
  align-items: center; 
  gap: 0.4rem;
  background-color: var(--role-color, #8c8c8c); 
  color: #fff;
}

/* --- BOTÃO DE STATUS MELHORADO --- */
.statusSelect {
  /* 1. Usa a variável de cor passada pelo React para o fundo */
  background-color: var(--status-color);
  
  /* 2. Garante que o texto seja legível e tenha profundidade */
  color: white;
  font-weight: 600;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
  
  /* 3. Remove a aparência padrão do navegador para permitir estilização */
  -webkit-appearance: none;
  moz-appearance: none;
  appearance: none;
  
  /* 4. Estilos de layout e borda aprimorados */
  padding: 0.6rem 2.2rem 0.6rem 1rem;
  border-radius: 8px;
  border: 1px solid rgba(0, 0, 0, 0.15);
  font-size: 0.9rem;
  cursor: pointer;
  
  /* 5. Efeito de profundidade com sombra interna e externa */
  box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.25), 
              0 1px 2px rgba(0, 0, 0, 0.1);

  /* 6. Adiciona uma seta personalizada (SVG embutido) */
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.8rem center;
  background-size: 1em;
  
  /* 7. Transição suave para todas as propriedades animáveis */
  transition: all 0.2s ease-in-out;
}

.statusSelect:hover {
  filter: brightness(1.05);
  transform: translateY(-1px);
  box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.25), 
              0 4px 8px rgba(0, 0, 0, 0.2);
}

.statusSelect:focus {
  outline: none;
  /* Anel de foco mais destacado e temático */
  box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.25),
              0 0 0 2px var(--bg-card), 
              0 0 0 4px var(--status-color);
}


.actionButtons { 
  display: flex; 
  gap: 0.5rem; 
}

.actionButtons button {
  background: none; 
  border: none; 
  cursor: pointer; 
  padding: 0.5rem;
  color: var(--text-muted); 
  border-radius: 50%;
  display: flex; 
  align-items: center; 
  justify-content: center;
  transition: background-color 0.2s, color 0.2s;
}

.actionButtons button:hover { 
  background-color: var(--border-color); 
}

.editButton:hover { 
  color: var(--blue); 
}

.deleteButton:hover { 
  color: var(--red); 
}

.modalOverlay {
  position: fixed; 
  top: 0; 
  left: 0; 
  width: 100%; 
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); 
  display: flex;
  align-items: center; 
  justify-content: center; 
  z-index: 1000;
  padding: 1rem; 
  transition: opacity 0.3s;
}

.modalContent {
  /* CORRIGIDO: --card-bg para --bg-card */
  background-color: var(--bg-card); 
  color: var(--text-color);
  padding: 2rem; 
  border-radius: 12px; 
  width: 100%; 
  max-width: 800px;
  max-height: 90vh; 
  overflow-y: auto; 
  position: relative;
  box-shadow: 0 10px 30px rgba(0,0,0,0.3);
}

.closeModal {
  position: absolute; 
  top: 1rem; 
  right: 1rem; 
  background: none;
  border: none; 
  font-size: 1.5rem; 
  color: var(--text-muted); 
  cursor: pointer;
}

.modalContent h2 { 
  margin-top: 0; 
  margin-bottom: 2rem; 
  display: flex; 
  align-items: center; 
  gap: 0.75rem; 
}

.modalTitleIcon { 
  color: var(--accent-color); 
}

.formSection { 
  margin-bottom: 2rem; 
}

.formSection h3 { 
  border-bottom: 1px solid var(--border-color); 
  padding-bottom: 0.5rem; 
  margin-bottom: 1rem; 
  display: flex; 
  align-items: center; 
  gap: 0.5rem; 
}

.formGrid { 
  display: grid; 
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
  gap: 1rem; 
}

.formGroup { 
  display: flex; 
  flex-direction: column; 
}

.formGroup label { 
  font-size: 0.9rem; 
  color: var(--text-muted); 
  margin-bottom: 0.5rem; 
  display: flex; 
  align-items: center; 
  gap: 0.5rem; 
}

.formGroup input, .formGroup select, .formGroup textarea {
  background-color: var(--bg-color); 
  color: var(--text-color);
  border: 1px solid var(--border-color); 
  border-radius: 8px;
  padding: 0.75rem; 
  font-size: 1rem;
}

.formGroup input:focus, .formGroup select:focus, .formGroup textarea:focus {
  outline: none; 
  border-color: var(--accent-color);
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.25);
}

.formGroup textarea { 
  resize: vertical; 
  min-height: 80px; 
}

.modalActions {
  display: flex; 
  justify-content: flex-end; 
  gap: 1rem;
  margin-top: 2rem; 
  border-top: 1px solid var(--border-color);
  padding-top: 1.5rem;
}

.cancelButton, .saveButton {
  padding: 0.75rem 1.5rem; 
  border-radius: 8px;
  font-weight: 600; 
  cursor: pointer; 
  transition: all 0.2s;
  border: none;
}

.cancelButton {
  background-color: var(--border-color); 
  color: var(--text-color);
}

.saveButton { 
  background-color: var(--accent-color); 
  color: #fff; 
}

.saveButton:hover { 
  background-color: var(--accent-hover); 
}

.cancelButton:hover { 
  filter: brightness(1.2); 
}

.loading { 
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  justify-content: center; 
  height: 300px; 
  gap: 1rem; 
  color: var(--text-muted); 
}

.spinner {
  width: 48px; 
  height: 48px; 
  border: 5px solid var(--border-color);
  border-bottom-color: var(--accent-color); 
  border-radius: 50%;
  animation: rotation 1s linear infinite;
}

@keyframes rotation { 
  0% { transform: rotate(0deg); } 
  100% { transform: rotate(360deg); } 
}

@media (max-width: 768px) {
  .mainContent { 
    padding: 1rem; 
  }
  .mainHeader { 
    flex-direction: column; 
    align-items: flex-start; 
  }
  .searchBox { 
    max-width: 100%; 
  }
  .viewToggle { 
    width: 100%; 
  }
  .viewToggle button { 
    flex: 1; 
    justify-content: center; 
  }
  .dataTable thead { 
    display: none; 
  }
  .dataTable, .dataTable tbody, .dataTable tr, .dataTable td {
    display: block; 
    width: 100%;
  }
  .dataTable tr {
    margin-bottom: 1rem; 
    border: 1px solid var(--border-color);
    border-radius: 8px; 
    padding: 0.5rem;
  }
  .dataTable td {
    display: flex; 
    justify-content: space-between; 
    align-items: center;
    padding: 0.75rem 0.5rem; 
    border: none;
    border-bottom: 1px dashed var(--border-color);
  }
  .dataTable td:last-child { 
    border-bottom: none; 
  }
  .dataTable td::before {
    content: attr(data-label); 
    font-weight: 600;
    color: var(--text-muted); 
    margin-right: 1rem;
  }
  .statusSelect { 
    flex-grow: 1; 
    max-width: 60%; 
  }
  .actionButtons { 
    justify-content: flex-end; 
  }
  .modalActions { 
    flex-direction: column; 
  }
  .modalActions button { 
    width: 100%; 
  }
}
